#!/usr/bin/env python3

import sys

# ROS 2
import rclpy
from rclpy.signals import SignalHandlerOptions
from rclpy.executors import MultiThreadedExecutor

# Project
from multi_purpose_mpc_ros.mpc_controller import MPCController
from multi_purpose_mpc_ros.common import parse_args_without_ros


def main(argv = sys.argv) -> None:

    args = parse_args_without_ros(argv)
    rclpy.init(args=argv, signal_handler_options=SignalHandlerOptions.NO)
    try:
        node = MPCController(args.config_path)
        executor = MultiThreadedExecutor(num_threads=2)
        executor.add_node(node)
        executor.spin()
    except KeyboardInterrupt:
        node.get_logger().info("Shutdown requested")
    finally:
        rclpy.shutdown()
        for node in executor._nodes:
            node.destroy_node()
        executor.shutdown()
        executor._executor.shutdown()


if __name__ == "__main__":
    main(sys.argv)